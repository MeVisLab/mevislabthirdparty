diff --git c/include/muParserDLL.h i/include/muParserDLL.h
index 18051c4..3e99ced 100644
--- c/include/muParserDLL.h
+++ i/include/muParserDLL.h
@@ -43,7 +43,7 @@ extern "C"
 	// Basic types
 	typedef void* muParserHandle_t;    // parser handle
 
-#ifndef _UNICODE
+#if 1
 	typedef char   muChar_t;            // character type
 #else
 	typedef wchar_t   muChar_t;            // character type
diff --git c/include/muParserDef.h i/include/muParserDef.h
index 7ce24f2..03f139f 100644
--- c/include/muParserDef.h
+++ i/include/muParserDef.h
@@ -57,7 +57,7 @@
 */
 //#define MUP_USE_OPENMP
 
-#if defined(_UNICODE)
+#if 0
 	/** \brief Definition of the basic parser string type. */
 	#define MUP_STRING_TYPE std::wstring
 
@@ -86,13 +86,13 @@
 
 #if defined(_MSC_VER)
 	#pragma warning(push)
-	#pragma warning(disable : 26812) 
+	#pragma warning(disable : 26812)
 #endif
 
 
 namespace mu
 {
-#if defined(_UNICODE)
+#if 0
 
 	/** \brief Encapsulate wcout. */
 	inline std::wostream& console()
diff --git c/samples/example2/example2.c i/samples/example2/example2.c
index 8106c69..a24cb53 100644
--- c/samples/example2/example2.c
+++ i/samples/example2/example2.c
@@ -39,7 +39,7 @@
 #define PARSER_CONST_E   2.718281828459045235360287
 #define PARSER_MAXVARS		10
 
-#ifndef _UNICODE
+#if 1
 	#define _T(x) x
 	#define myprintf printf
 	#define mystrlen strlen
@@ -140,7 +140,7 @@ static void Intro(muParserHandle_t hParser)
 	myprintf(_T("  |__|_|  /|____/ |____|    (____  /|__|  /____  > \\___  >|__|    \n"));
 	myprintf(_T("        \\/                       \\/            \\/      \\/         \n"));
 	myprintf(_T("  Version %s (DLL)\n"), mupGetVersion(hParser));
-#ifdef _UNICODE
+#if 0
 	myprintf(_T("  Sample build with UNICODE support\n"));
 #else
 	myprintf(_T("  Sample build with ASCII support\n"));
diff --git c/src/muParserBase.cpp i/src/muParserBase.cpp
index eac46ca..e160a37 100644
--- c/src/muParserBase.cpp
+++ i/src/muParserBase.cpp
@@ -288,10 +288,10 @@ namespace mu
 			ss << _T("; RELEASE");
 #endif
 
-#ifdef _UNICODE
+#if 0
 			ss << _T("; UNICODE");
 #else
-#ifdef _MBCS
+#if 0
 			ss << _T("; MBCS");
 #else
 			ss << _T("; ASCII");
diff --git c/src/muParserDLL.cpp i/src/muParserDLL.cpp
index ed69719..7b4a420 100644
--- c/src/muParserDLL.cpp
+++ i/src/muParserDLL.cpp
@@ -197,7 +197,7 @@ API_EXPORT(const muChar_t*) mupGetVersion(muParserHandle_t a_hParser)
 	MU_TRY
 		muParser_t* const p(AsParser(a_hParser));
 
-#ifndef _UNICODE
+#if 1
 		sprintf(s_tmpOutBuf, "%s", p->GetVersion().c_str());
 #else
 		wsprintf(s_tmpOutBuf, _T("%s"), p->GetVersion().c_str());
@@ -594,7 +594,7 @@ API_EXPORT(const muChar_t*) mupGetExpr(muParserHandle_t a_hParser)
 
 		// C# explodes when pMsg is returned directly. For some reason it can't access
 		// the memory where the message lies directly.
-#ifndef _UNICODE
+#if 1
 		sprintf(s_tmpOutBuf, "%s", p->GetExpr().c_str());
 #else
 		wsprintf(s_tmpOutBuf, _T("%s"), p->GetExpr().c_str());
@@ -700,7 +700,7 @@ API_EXPORT(void) mupGetVar(muParserHandle_t a_hParser, unsigned a_iVar, const mu
 		for (unsigned i = 0; i < a_iVar; ++i)
 			++item;
 
-#ifndef _UNICODE
+#if 1
 		strncpy(szName, item->first.c_str(), sizeof(szName));
 #else
 		wcsncpy(szName, item->first.c_str(), sizeof(szName));
@@ -773,7 +773,7 @@ API_EXPORT(void) mupGetExprVar(muParserHandle_t a_hParser, unsigned a_iVar, cons
 		for (unsigned i = 0; i < a_iVar; ++i)
 			++item;
 
-#ifndef _UNICODE
+#if 1
 		strncpy(szName, item->first.c_str(), sizeof(szName));
 #else
 		wcsncpy(szName, item->first.c_str(), sizeof(szName));
@@ -868,7 +868,7 @@ API_EXPORT(void) mupGetConst(muParserHandle_t a_hParser, unsigned a_iVar, const
 		for (unsigned i = 0; i < a_iVar; ++i)
 			++item;
 
-#ifndef _UNICODE
+#if 1
 		strncpy(szName, item->first.c_str(), sizeof(szName));
 #else
 		wcsncpy(szName, item->first.c_str(), sizeof(szName));
@@ -931,7 +931,7 @@ API_EXPORT(const muChar_t*) mupGetErrorMsg(muParserHandle_t a_hParser)
 
 	// C# explodes when pMsg is returned directly. For some reason it can't access
 	// the memory where the message lies directly.
-#ifndef _UNICODE
+#if 1
 	sprintf(s_tmpOutBuf, "%s", pMsg);
 #else
 	wsprintf(s_tmpOutBuf, _T("%s"), pMsg);
@@ -949,7 +949,7 @@ API_EXPORT(const muChar_t*) mupGetErrorToken(muParserHandle_t a_hParser)
 
 	// C# explodes when pMsg is returned directly. For some reason it can't access
 	// the memory where the message lies directly.
-#ifndef _UNICODE
+#if 1
 	sprintf(s_tmpOutBuf, "%s", pToken);
 #else
 	wsprintf(s_tmpOutBuf, _T("%s"), pToken);
