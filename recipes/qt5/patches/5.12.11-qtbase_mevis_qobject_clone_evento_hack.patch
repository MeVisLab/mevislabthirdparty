diff --git i/qtbase/src/corelib/kernel/qobject.cpp w/qtbase/src/corelib/kernel/qobject.cpp
index 644f1916c..495fdf8cb 100644
--- i/qtbase/src/corelib/kernel/qobject.cpp
+++ w/qtbase/src/corelib/kernel/qobject.cpp
@@ -524,6 +524,36 @@ void QMetaCallEvent::placeMetaCall(QObject *object)
     }
 }
 
+// MEVIS BEGIN
+QEvent* mevis_cloneAndClearQMetaCallEvent(QEvent* event)
+{
+  if (event->type() == QEvent::MetaCall) {
+    return static_cast<QMetaCallEvent*>(event)->cloneAndClear();
+  } else {
+    return NULL;
+  }
+}
+
+QEvent* QMetaCallEvent::cloneAndClear()
+{
+  QMetaCallEvent* newEvent = NULL;
+  if (slotObj_) {
+      newEvent = new QMetaCallEvent(slotObj_,
+                                    sender_, signalId_,
+                                    nargs_, types_, args_, semaphore_);
+  } else {
+      newEvent = new QMetaCallEvent(method_offset_, method_relative_, callFunction_,
+                                    sender_, signalId_,
+                                    nargs_, types_, args_, semaphore_);
+  }
+  // clear the types that are accessed/deleted in the destructor
+  types_ = NULL;
+  args_ = NULL;
+  semaphore_ = NULL;
+  return newEvent;
+}
+// MEVIS END
+
 /*!
     \class QSignalBlocker
     \brief Exception-safe wrapper around QObject::blockSignals().
diff --git i/qtbase/src/corelib/kernel/qobject.h w/qtbase/src/corelib/kernel/qobject.h
index aac9bcdee..6a01a66c1 100644
--- i/qtbase/src/corelib/kernel/qobject.h
+++ w/qtbase/src/corelib/kernel/qobject.h
@@ -92,6 +92,12 @@ Q_CORE_EXPORT void qt_qFindChildren_helper(const QObject *parent, const QRegular
                                            const QMetaObject &mo, QList<void *> *list, Qt::FindChildOptions options);
 Q_CORE_EXPORT QObject *qt_qFindChild_helper(const QObject *parent, const QString &name, const QMetaObject &mo, Qt::FindChildOptions options);
 
+// MEVIS BEGIN
+// Method added for MeVisLab to allow to clone and clear a QMetaCallEvent, which is private in Qt
+#define MEVIS_QMETACALLEVENT_HACK
+Q_CORE_EXPORT QEvent* mevis_cloneAndClearQMetaCallEvent(QEvent* event);
+// MEVIS END
+
 class Q_CORE_EXPORT QObjectData {
 public:
     virtual ~QObjectData() = 0;
diff --git i/qtbase/src/corelib/kernel/qobject_p.h w/qtbase/src/corelib/kernel/qobject_p.h
index 321f358e3..e3d10c208 100644
--- i/qtbase/src/corelib/kernel/qobject_p.h
+++ w/qtbase/src/corelib/kernel/qobject_p.h
@@ -392,6 +392,12 @@ public:
 
     virtual void placeMetaCall(QObject *object);
 
+    // MEVIS BEGIN
+    //! Returns a cloned QMetaCallEvent and clears the data of the original event. 
+    //! Added for MeVis use case, used in mevis_cloneAndClearQMetaCallEvent
+    QEvent* cloneAndClear();
+    // MEVIS END
+    
 private:
     QtPrivate::QSlotObjectBase *slotObj_;
     const QObject *sender_;
