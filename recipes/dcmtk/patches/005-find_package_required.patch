diff --git a/CMake/3rdparty.cmake b/CMake/3rdparty.cmake
index 510027c..8337323 100644
--- a/CMake/3rdparty.cmake
+++ b/CMake/3rdparty.cmake
@@ -25,16 +25,16 @@ mark_as_advanced(DCMTK_USE_FIND_PACKAGE)
 if(DCMTK_USE_FIND_PACKAGE)
   # Find TIFF
   if(DCMTK_WITH_TIFF)
-    find_package(TIFF QUIET)
+    find_package(TIFF REQUIRED)
     # turn off library if it could not be found
     if(NOT TIFF_FOUND)
-      message(STATUS "Warning: TIFF support will be disabled because libtiff was not found.")
+      message(FATAL_ERROR "TIFF support will be disabled because libtiff was not found.")
       set(DCMTK_WITH_TIFF OFF CACHE BOOL "" FORCE)
       set(WITH_LIBTIFF "")
     else()
       set(WITH_LIBTIFF 1)
       # libtiff can be compiled with libjpeg support; if available, add libjpeg to library and include path
-      find_package(JPEG QUIET)
+      find_package(JPEG REQUIRED)
       if(NOT JPEG_FOUND)
         message(STATUS "Info: DCMTK TIFF support will be enabled (but without JPEG)")
         include_directories(${TIFF_INCLUDE_DIR})
@@ -49,10 +49,10 @@ if(DCMTK_USE_FIND_PACKAGE)
 
   # Find PNG
   if(DCMTK_WITH_PNG)
-    find_package(PNG QUIET)
+    find_package(PNG REQUIRED)
     if(NOT PNG_FOUND)
       set(DCMTK_WITH_PNG OFF CACHE BOOL "" FORCE)
-      message(STATUS "Warning: PNG support will be disabled because libpng was not found.")
+      message(FATAL_ERROR "PNG support will be disabled because libpng was not found.")
       set(WITH_LIBPNG "")
     else()
       message(STATUS "Info: DCMTK PNG support will be enabled")
@@ -64,9 +64,9 @@ if(DCMTK_USE_FIND_PACKAGE)
 
   # Find OpenSSL
   if(DCMTK_WITH_OPENSSL)
-    find_package(OpenSSL QUIET)
+    find_package(OpenSSL REQUIRED)
     if(NOT OPENSSL_FOUND)
-      message(STATUS "Warning: OPENSSL support will be disabled because openssl was not found.")
+      message(FATAL_ERROR "OPENSSL support will be disabled because openssl was not found.")
       set(WITH_OPENSSL "")
       set(DCMTK_WITH_OPENSSL OFF CACHE BOOL "" FORCE)
     else()
@@ -95,9 +95,9 @@ if(DCMTK_USE_FIND_PACKAGE)
 
   # Find libXML2
   if(DCMTK_WITH_XML)
-    find_package(LibXml2 QUIET)
+    find_package(LibXml2 REQUIRED)
     if(NOT LIBXML2_FOUND)
-      message(STATUS "Warning: XML support will be disabled because libxml2 was not found.")
+      message(FATAL_ERROR "XML support will be disabled because libxml2 was not found.")
       set(WITH_LIBXML "")
       set(DCMTK_WITH_XML OFF CACHE BOOL "" FORCE)
     else()
@@ -110,9 +110,9 @@ if(DCMTK_USE_FIND_PACKAGE)
 
   # Find zlib
   if(DCMTK_WITH_ZLIB)
-    find_package(ZLIB QUIET)
+    find_package(ZLIB REQUIRED)
     if(NOT ZLIB_FOUND)
-      message(STATUS "Warning: ZLIB support will be disabled because zlib was not found.")
+      message(FATAL_ERROR "ZLIB support will be disabled because zlib was not found.")
       set(WITH_ZLIB "")
       set(DCMTK_WITH_ZLIB OFF CACHE BOOL "" FORCE)
     else()
@@ -125,9 +125,9 @@ if(DCMTK_USE_FIND_PACKAGE)
 
   # Find libsndfile
   if(DCMTK_WITH_SNDFILE)
-    find_package(SNDFILE QUIET)
+    find_package(SNDFILE REQUIRED)
     if(NOT SNDFILE_LIBS)
-      message(STATUS "Warning: SNDFILE support will be disabled because libsndfile was not found.")
+      message(FATAL_ERROR "SNDFILE support will be disabled because libsndfile was not found.")
       set(WITH_SNDFILE "")
       set(DCMTK_WITH_SNDFILE OFF CACHE BOOL "" FORCE)
     else()
@@ -140,8 +140,8 @@ if(DCMTK_USE_FIND_PACKAGE)
 
   # Find libiconv
   if(DCMTK_WITH_ICONV)
-    find_package(Iconv QUIET)
-    find_package(LIBCHARSET QUIET)
+    find_package(Iconv REQUIRED)
+    find_package(LIBCHARSET REQUIRED)
     if(ICONV_FOUND)
         if(NOT Iconv_IS_BUILT_IN)
             set(LIBICONV_FOUND ${ICONV_FOUND})
@@ -155,7 +155,7 @@ if(DCMTK_USE_FIND_PACKAGE)
         endif()
     endif()
     if(NOT LIBICONV_FOUND OR NOT LIBCHARSET_FOUND)
-      message(STATUS "Warning: ICONV support will be disabled because libiconv was not found. Correct LIBICONV_LIBDIR and LIBICONV_INCLUDE_DIR and re-enable DCMTK_WITH_ICONV.")
+      message(FATAL_ERROR "ICONV support will be disabled because libiconv was not found. Correct LIBICONV_LIBDIR and LIBICONV_INCLUDE_DIR and re-enable DCMTK_WITH_ICONV.")
       set(DCMTK_WITH_ICONV OFF CACHE BOOL "" FORCE)
       set(WITH_LIBICONV "")
     else()
@@ -170,9 +170,9 @@ if(DCMTK_USE_FIND_PACKAGE)
 
   # Find libwrap
   if(DCMTK_WITH_WRAP)
-    find_package(WRAP QUIET)
+    find_package(WRAP REQUIRED)
     if(NOT WRAP_FOUND)
-      message(STATUS "Warning: WRAP support will be disabled because libwrap was not found.")
+      message(FATAL_ERROR "WRAP support will be disabled because libwrap was not found.")
       set(WITH_TCPWRAPPER "")
       set(DCMTK_WITH_WRAP OFF CACHE BOOL "" FORCE)
     else()
@@ -188,13 +188,13 @@ if(DCMTK_USE_FIND_PACKAGE)
     if(DCMTK_USE_OWN_FINDOPENJPEG_MODULE)
       # PREPEND and POP_FRONT can only be used since version 3.15.so we use more compatible commands.
       list(INSERT CMAKE_MODULE_PATH 0 "${CMAKE_CURRENT_SOURCE_DIR}/${DCMTK_CMAKE_INCLUDE}/CMake/")
-      find_package(OpenJPEG QUIET MODULE)
+      find_package(OpenJPEG REQUIRED MODULE)
       list(REMOVE_AT CMAKE_MODULE_PATH 0)
     else()
-      find_package(OpenJPEG QUIET PATH_SUFFIXES "openjpeg-2.4.0" "openjpeg-2.3.1" "openjpeg-2.3.0")
+      find_package(OpenJPEG REQUIRED PATH_SUFFIXES "openjpeg-2.4.0" "openjpeg-2.3.1" "openjpeg-2.3.0")
     endif()
     if(NOT OPENJPEG_FOUND)
-      message(STATUS "Warning: OpenJPEG support will be disabled because the OpenJPEG library was not found.")
+      message(FATAL_ERROR "OpenJPEG support will be disabled because the OpenJPEG library was not found.")
       set(WITH_OPENJPEG "")
       set(DCMTK_WITH_OPENJPEG OFF CACHE BOOL "" FORCE)
     else()
@@ -258,7 +258,7 @@ else()
       # this hides some warnings that are emitted when linking against libxmlXXX.lib instead of linking the DLL directly
       add_definitions("-DLIBXML_STATIC")
     else() # turn off library if library path not set
-      message(STATUS "Warning: XML support will be disabled because libxml2 directory is not specified. Correct path and re-enable DCMTK_WITH_XML.")
+      message(FATAL_ERROR "XML support will be disabled because libxml2 directory is not specified. Correct path and re-enable DCMTK_WITH_XML.")
       set(DCMTK_WITH_XML OFF CACHE BOOL "" FORCE)
       set(WITH_LIBXML "")
     endif()
@@ -273,7 +273,7 @@ else()
       message(STATUS "Info: DCMTK PNG support will be enabled")
       set(WITH_LIBPNG 1)
     else() # turn off library if library path not set
-      message(STATUS "Warning: PNG support will be disabled because libpng directory was not specified. Correct path and re-enable DCMTK_WITH_PNG.")
+      message(FATAL_ERROR "PNG support will be disabled because libpng directory was not specified. Correct path and re-enable DCMTK_WITH_PNG.")
       set(DCMTK_WITH_PNG OFF CACHE BOOL "" FORCE)
       set(WITH_LIBPNG "")
     endif()
@@ -288,7 +288,7 @@ else()
       message(STATUS "Info: DCMTK TIFF support will be enabled")
       set(WITH_LIBTIFF 1)
     else() # turn off library if library path not set
-      message(STATUS "Warning: TIFF support will be disabled because libtiff directory was not specified. Correct path and re-enable DCMTK_WITH_TIFF.")
+      message(FATAL_ERROR "TIFF support will be disabled because libtiff directory was not specified. Correct path and re-enable DCMTK_WITH_TIFF.")
       set(DCMTK_WITH_TIFF OFF CACHE BOOL "" FORCE)
       set(WITH_LIBTIFF "")
     endif()
@@ -316,7 +316,7 @@ else()
         set(WITH_OPENSSL "")
       endif()
     else() # turn off library if library path not set
-      message(STATUS "Warning: OPENSSL support will be disabled because openssl directory was not specified. Correct path and re-enable DCMTK_WITH_OPENSSL.")
+      message(FATAL_ERROR "OPENSSL support will be disabled because openssl directory was not specified. Correct path and re-enable DCMTK_WITH_OPENSSL.")
       set(DCMTK_WITH_OPENSSL OFF CACHE BOOL "" FORCE)
       set(WITH_OPENSSL "")
     endif()
@@ -331,7 +331,7 @@ else()
       message(STATUS "Info: DCMTK ZLIB support will be enabled")
       set(WITH_ZLIB 1)
     else() # turn off library if library path not set
-      message(STATUS "Warning: ZLIB support will be disabled because zlib directory was not specified. Correct path and re-enable DCMTK_WITH_ZLIB.")
+      message(FATAL_ERROR "ZLIB support will be disabled because zlib directory was not specified. Correct path and re-enable DCMTK_WITH_ZLIB.")
       set(DCMTK_WITH_ZLIB OFF CACHE BOOL "" FORCE)
       set(WITH_ZLIB "")
     endif()
@@ -346,7 +346,7 @@ else()
       message(STATUS "Info: DCMTK SNDFILE support will be enabled")
       set(WITH_SNDFILE 1)
     else() # turn off library if library path not set
-      message(STATUS "Warning: SNDFILE support will be disabled because libsndfile directory was not specified. Correct path and re-enable DCMTK_WITH_SNDFILE.")
+      message(FATAL_ERROR "SNDFILE support will be disabled because libsndfile directory was not specified. Correct path and re-enable DCMTK_WITH_SNDFILE.")
       set(DCMTK_WITH_SNDFILE OFF CACHE BOOL "" FORCE)
       set(WITH_SNDFILE "")
     endif()
@@ -361,7 +361,7 @@ else()
       message(STATUS "Info: DCMTK ICONV support will be enabled")
       set(WITH_LIBICONV 1)
     else() # turn off library if library path not set
-      message(STATUS "Warning: ICONV support will be disabled because libiconv directory was not specified. Correct path and re-enable DCMTK_WITH_ICONV.")
+      message(FATAL_ERROR "ICONV support will be disabled because libiconv directory was not specified. Correct path and re-enable DCMTK_WITH_ICONV.")
       set(DCMTK_WITH_ICONV OFF CACHE BOOL "" FORCE)
       set(WITH_LIBICONV "")
     endif()
@@ -385,7 +385,7 @@ else()
           set(WITH_OPENJPEG 1)
       endif()
     else() # turn off library if library path not set
-      message(STATUS "Warning: OpenJPEG support will be disabled because openjpeg directory was not specified. Correct path and re-enable DCMTK_WITH_OPENJPEG.")
+      message(FATAL_ERROR "OpenJPEG support will be disabled because openjpeg directory was not specified. Correct path and re-enable DCMTK_WITH_OPENJPEG.")
       set(DCMTK_WITH_OPENJPEG OFF CACHE BOOL "" FORCE)
       set(WITH_OPENJPEG "")
     endif()
@@ -405,9 +405,9 @@ endif()
 
 # Find doxygen
 if(DCMTK_WITH_DOXYGEN)
-  find_package(Doxygen QUIET) # will set variable DOXYGEN_EXECUTABLE
+  find_package(Doxygen REQUIRED) # will set variable DOXYGEN_EXECUTABLE
   if(NOT DOXYGEN_FOUND)
-    message(STATUS "Warning: DOXYGEN support will be disabled because doxygen was not found.")
+    message(FATAL_ERROR "DOXYGEN support will be disabled because doxygen was not found.")
     set(DCMTK_WITH_DOXYGEN OFF CACHE BOOL "" FORCE)
   endif()
 endif()
