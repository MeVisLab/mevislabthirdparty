diff --git i/ThirdParty/hdf5/CMakeLists.txt w/ThirdParty/hdf5/CMakeLists.txt
index 5fa25002..9054a6c1 100644
--- i/ThirdParty/hdf5/CMakeLists.txt
+++ w/ThirdParty/hdf5/CMakeLists.txt
@@ -4,6 +4,10 @@ vtk_module_third_party(HDF5
     ${CMAKE_CURRENT_BINARY_DIR}/vtkhdf5
     ${CMAKE_CURRENT_SOURCE_DIR}/vtkhdf5/hl/src
     ${CMAKE_CURRENT_SOURCE_DIR}/vtkhdf5/src
+    ${CMAKE_CURRENT_SOURCE_DIR}/vtkhdf5/hl/c++/src
+    ${CMAKE_CURRENT_SOURCE_DIR}/vtkhdf5/hl/c++/src
+    ${CMAKE_CURRENT_SOURCE_DIR}/vtkhdf5/c++
+    ${CMAKE_CURRENT_SOURCE_DIR}/vtkhdf5/c++/src
   NO_ADD_SUBDIRECTORY
   COMPONENTS C
   OPTIONAL_COMPONENTS HL
@@ -14,7 +18,8 @@ endif()
 
 set(HDF5_EXTERNALLY_CONFIGURED ON)
 set(HDF5_EXTERNAL_LIB_PREFIX "vtk")
-set(HDF5_EXPORTED_TARGETS ${VTK_INSTALL_EXPORT_NAME})
+
+set(HDF5_EXPORTED_TARGETS    ${VTK_INSTALL_EXPORT_NAME})
 set(HDF5_INSTALL_LIBRARY_DIR ${VTK_INSTALL_LIBRARY_DIR})
 set(HDF5_INSTALL_ARCHIVE_DIR ${VTK_INSTALL_ARCHIVE_DIR})
 set(HDF5_INSTALL_RUNTIME_DIR ${VTK_INSTALL_RUNTIME_DIR})
@@ -23,7 +28,7 @@ set(HDF5_INSTALL_NO_DEVELOPMENT ${VTK_INSTALL_NO_DEVELOPMENT})
 
 # Configure HDF5 privately so its options do not appear to the user.
 set(HDF5_ALLOW_EXTERNAL_SUPPORT OFF CACHE INTERNAL "Allow External Library Building")
-set(HDF5_BUILD_CPP_LIB OFF CACHE INTERNAL "Build HDF5 C++ Library")
+set(HDF5_BUILD_CPP_LIB ON CACHE INTERNAL "Build HDF5 C++ Library")
 set(HDF5_BUILD_HL_LIB ON CACHE INTERNAL "Build HIGH Level HDF5 Library")
 set(HDF5_DISABLE_COMPILER_WARNINGS ON CACHE INTERNAL "Disable HDF5 warnings")
 set(HDF5_ENABLE_CODESTACK OFF CACHE INTERNAL "Enable the function stack tracing (for developer debugging).")
diff --git i/ThirdParty/hdf5/vtkhdf5/c++/src/CMakeLists.txt w/ThirdParty/hdf5/vtkhdf5/c++/src/CMakeLists.txt
index 6dd7d76f..2e8a920b 100644
--- i/ThirdParty/hdf5/vtkhdf5/c++/src/CMakeLists.txt
+++ w/ThirdParty/hdf5/vtkhdf5/c++/src/CMakeLists.txt
@@ -121,4 +121,4 @@ if (HDF5_EXPORTED_TARGETS AND NOT VTK_INSTALL_NO_LIBRARIES)
       ARCHIVE DESTINATION ${VTK_INSTALL_ARCHIVE_DIR} COMPONENT Development
       RUNTIME DESTINATION ${VTK_INSTALL_RUNTIME_DIR} COMPONENT RuntimeLibraries
   )
-endif (HDF5_EXPORTED_TARGETS)
+endif (HDF5_EXPORTED_TARGETS AND NOT VTK_INSTALL_NO_LIBRARIES)
diff --git i/ThirdParty/hdf5/vtkhdf5/hl/c++/src/CMakeLists.txt w/ThirdParty/hdf5/vtkhdf5/hl/c++/src/CMakeLists.txt
index c7be9b8d..638f3837 100644
--- i/ThirdParty/hdf5/vtkhdf5/hl/c++/src/CMakeLists.txt
+++ w/ThirdParty/hdf5/vtkhdf5/hl/c++/src/CMakeLists.txt
@@ -51,6 +51,6 @@ if (HDF5_EXPORTED_TARGETS AND NOT VTK_INSTALL_NO_LIBRARIES)
           ${HDF5_EXPORTED_TARGETS}
           LIBRARY DESTINATION ${VTK_INSTALL_LIBRARY_DIR} COMPONENT hlcpplibraries
           ARCHIVE DESTINATION ${VTK_INSTALL_ARCHIVE_DIR} COMPONENT hlcpplibraries
-          RUNTIME DESTINATION ${{VTK_INSTALL_RUNTIME_DIR} COMPONENT hlcpplibraries
+          RUNTIME DESTINATION ${VTK_INSTALL_RUNTIME_DIR} COMPONENT hlcpplibraries
   )
-endif (HDF5_EXPORTED_TARGETS)
+endif (HDF5_EXPORTED_TARGETS AND NOT VTK_INSTALL_NO_LIBRARIES)
diff --git i/ThirdParty/hdf5/vtkhdf5/hl/src/vtk_libhdf5_hl_mangle.h w/ThirdParty/hdf5/vtkhdf5/hl/src/vtk_libhdf5_hl_mangle.h
index 64fc96ee..b073ea22 100644
--- i/ThirdParty/hdf5/vtkhdf5/hl/src/vtk_libhdf5_hl_mangle.h
+++ w/ThirdParty/hdf5/vtkhdf5/hl/src/vtk_libhdf5_hl_mangle.h
@@ -1,6 +1,7 @@
 #ifndef vtk_libhdf5_hl_mangle_h
 #define vtk_libhdf5_hl_mangle_h
 
+#include <vtk_libhdf5_mangle.h>
 /*
 
 This header file mangles all symbols exported from the hdf5_hl library.
@@ -18,6 +19,8 @@ nm libhdf5_hl.so | grep " [ABCDGNRSTVW] " | awk '{print "#define "$3" vtk__"$3}'
 
 */
 
+// #define is_enum conflicts with GCC's <functional> and <type_traits>
+#ifdef MEVIS_THIRDPARTY_MANGLE_EVERYTHING
 #define arr_stack vtk__arr_stack
 #define asindex vtk__asindex
 #define __bss_start vtk____bss_start
@@ -29,6 +32,7 @@ nm libhdf5_hl.so | grep " [ABCDGNRSTVW] " | awk '{print "#define "$3" vtk__"$3}'
 #define enum_memb_symbol vtk__enum_memb_symbol
 #define _fini vtk___fini
 #define first_quote vtk__first_quote
+#endif
 #define H5DOwrite_chunk vtk__H5DOwrite_chunk
 #define H5DSattach_scale vtk__H5DSattach_scale
 #define H5DSdetach_scale vtk__H5DSdetach_scale
@@ -182,6 +186,7 @@ nm libhdf5_hl.so | grep " [ABCDGNRSTVW] " | awk '{print "#define "$3" vtk__"$3}'
 #define H5TBwrite_fields_index vtk__H5TBwrite_fields_index
 #define H5TBwrite_fields_name vtk__H5TBwrite_fields_name
 #define H5TBwrite_records vtk__H5TBwrite_records
+#ifdef MEVIS_THIRDPARTY_MANGLE_EVERYTHING
 #define indent vtk__indent
 #define _init vtk___init
 #define input_len vtk__input_len
@@ -197,5 +202,6 @@ nm libhdf5_hl.so | grep " [ABCDGNRSTVW] " | awk '{print "#define "$3" vtk__"$3}'
 #define str_cset vtk__str_cset
 #define str_pad vtk__str_pad
 #define str_size vtk__str_size
+#endif
 
 #endif
diff --git i/ThirdParty/hdf5/vtkhdf5/src/H5api_adpt.h w/ThirdParty/hdf5/vtkhdf5/src/H5api_adpt.h
index 845a9a0c..ecf670ec 100644
--- i/ThirdParty/hdf5/vtkhdf5/src/H5api_adpt.h
+++ w/ThirdParty/hdf5/vtkhdf5/src/H5api_adpt.h
@@ -24,6 +24,21 @@
 /* This will only be defined if HDF5 was built with CMake */
 #ifdef H5_BUILT_AS_DYNAMIC_LIB
 
+
+#if defined(vtkhdf5_EXPORTS)
+#define hdf5_EXPORTS 
+#endif
+#if defined(vtkhdf5_hl_EXPORTS)
+#define hdf5_hl_EXPORTS 
+#endif
+#if defined(vtkhdf5_cpp_EXPORTS)
+#define hdf5_cpp_EXPORTS
+#endif
+#if defined(vtkhdf5_hl_cpp_EXPORTS)
+#define hdf5_hl_cpp_EXPORTS
+#endif
+
+
 #if defined (hdf5_EXPORTS)
   #define _HDF5DLL_
 #else
