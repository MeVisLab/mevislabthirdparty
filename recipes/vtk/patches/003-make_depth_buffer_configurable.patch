diff --git a/Rendering/OpenGL2/vtkOpenGLRenderWindow.cxx b/Rendering/OpenGL2/vtkOpenGLRenderWindow.cxx
index 726a2913..519c327b 100644
--- a/Rendering/OpenGL2/vtkOpenGLRenderWindow.cxx
+++ b/Rendering/OpenGL2/vtkOpenGLRenderWindow.cxx
@@ -424,6 +424,7 @@ vtkOpenGLRenderWindow::vtkOpenGLRenderWindow()
   // this->DepthRenderBufferObject = 0;
   this->AlphaBitPlanes = 8;
   this->Capabilities = nullptr;
+  this->RenderBufferTargetDepthSize = 32;
 
   this->TQuad2DVBO = nullptr;
   this->NoiseTextureObject = nullptr;
@@ -2501,7 +2502,7 @@ int vtkOpenGLRenderWindow::CreateFramebuffers(int width, int height)
       this->MultiSamples ? false : true, // textures
 #endif
       1, VTK_UNSIGNED_CHAR, // 1 color buffer uchar
-      true, 32,             // depth buffer
+      true, this->RenderBufferTargetDepthSize, // depth buffer
       this->MultiSamples, this->StencilCapable != 0);
     this->LastMultiSamples = this->MultiSamples;
     this->GetState()->PopFramebufferBindings();
@@ -2517,7 +2518,7 @@ int vtkOpenGLRenderWindow::CreateFramebuffers(int width, int height)
     this->DisplayFramebuffer->PopulateFramebuffer(width, height,
       true,                 // textures
       2, VTK_UNSIGNED_CHAR, // 1 color buffer uchar
-      true, 32,             // depth buffer
+      true, this->RenderBufferTargetDepthSize, // depth buffer
       0, this->StencilCapable != 0);
     this->GetState()->PopFramebufferBindings();
   }
@@ -2532,7 +2533,7 @@ int vtkOpenGLRenderWindow::CreateFramebuffers(int width, int height)
     this->ResolveFramebuffer->PopulateFramebuffer(width, height,
       true,                 // textures
       1, VTK_UNSIGNED_CHAR, // 1 color buffer uchar
-      true, 32,             // depth buffer
+      true, this->RenderBufferTargetDepthSize, // depth buffer
       0, this->StencilCapable != 0);
     this->GetState()->PopFramebufferBindings();
   }
diff --git a/Rendering/OpenGL2/vtkOpenGLRenderWindow.h b/Rendering/OpenGL2/vtkOpenGLRenderWindow.h
index 1ed55463..3fa6ae50 100644
--- a/Rendering/OpenGL2/vtkOpenGLRenderWindow.h
+++ b/Rendering/OpenGL2/vtkOpenGLRenderWindow.h
@@ -437,6 +437,14 @@ public:
   vtkBooleanMacro(FramebufferFlipY, bool);
   ///@}
 
+  ///@{
+  /**
+   * Give a target bit size for depth buffers of created Framebuffer Objects. Default is 32.
+   */
+  vtkSetMacro(RenderBufferTargetDepthSize, int);
+  vtkGetMacro(RenderBufferTargetDepthSize, int);
+  ///@}
+
   ///@{
   // copy depth values from a source framebuffer to a destination framebuffer
   // using texture maps to do the copy. The source framebufferobject must be texture
@@ -572,6 +580,9 @@ protected:
   // keep track of in case we need to recreate the framebuffer
   int LastMultiSamples;
 
+  // how much bits to use for depth of created Framebuffers
+  int RenderBufferTargetDepthSize;
+
   int ScreenSize[2];
 
 private:
